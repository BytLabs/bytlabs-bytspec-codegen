{
    "name": "commerce-platform",
    "version": "1.0.0",
    "boundedContexts": {
        "customerManagement": {
            "description": "A service to manage customers and their details like addresses, etc.",
            "domain": {
                "entities": {
                    "customer": {
                        "aggregate": true,
                        "properties": {
                            "id": {
                                "type": "text"
                            },
                            "firstName": {
                                "type": "text"
                            },
                            "lastName": {
                                "type": "text"
                            },
                            "email": {
                                "type": "text"
                            },
                            "password": {
                                "type": "text"
                            },
                            "phone": {
                                "type": "text"
                            },
                            "userId": {
                                "type": "text"
                            },
                            "addresses": {
                                "type": "collection",
                                "items": "#/domain/entities/address"
                            }
                        },
                        "actions": {
                            "update": {
                                "description": "Update customer fields",
                                "parameters": {
                                    "data": {
                                        "type": "#/domain/entities/customer"
                                    }
                                },
                                "execute": [
                                    {
                                        "mapFields": {
                                            "from": "@parameters.data",
                                            "omit": [
                                                "id",
                                                "addresses",
                                                "password",
                                                "userId"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "addAddress": {
                                "description": "Adds a new address for the customer.",
                                "parameters": {
                                    "data": {
                                        "type": "#/domain/entities/address"
                                    }
                                },
                                "execute": [
                                    {
                                        "push": {
                                            "to": "@fields.addresses",
                                            "value": "@parameters.data"
                                        }
                                    }
                                ]
                            },
                            "updateAddress": {
                                "description": "Updates an existing address by ID.",
                                "parameters": {
                                    "id": {
                                        "type": "text"
                                    },
                                    "data": {
                                        "type": "#/domain/entities/address"
                                    }
                                },
                                "execute": [
                                    {
                                        "let": {
                                            "existingAddress": {
                                                "find": {
                                                    "in": "@fields.addresses",
                                                    "where": {
                                                        "id": "@parameters.id"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "condition": {
                                                "isEmpty": "@let.existingAddress"
                                            },
                                            "then": {
                                                "error": "Address not found."
                                            }
                                        }
                                    },
                                    {
                                        "invoke": {
                                            "onTarget": "@let.existingAddress",
                                            "method": {
                                                "name": "update",
                                                "parameters": {
                                                    "data": "@parameters.data"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "address": {
                        "properties": {
                            "id": {
                                "type": "text"
                            },
                            "firstName": {
                                "type": "text"
                            },
                            "lastName": {
                                "type": "text"
                            },
                            "phone": {
                                "type": "text"
                            },
                            "company": {
                                "type": "text"
                            },
                            "addressLine1": {
                                "type": "text"
                            },
                            "addressLine2": {
                                "type": "text"
                            },
                            "city": {
                                "type": "text"
                            },
                            "countryCode": {
                                "type": "text"
                            },
                            "province": {
                                "type": "text"
                            },
                            "postalCode": {
                                "type": "text"
                            }
                        },
                        "actions": {
                            "update": {
                                "description": "Updates address fields",
                                "parameters": {
                                    "data": {
                                        "type": "#/domain/entities/address"
                                    }
                                },
                                "execute": [
                                    {
                                        "mapFields": {
                                            "from": "@parameters.data",
                                            "omit": [
                                                "id"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "application": {
                "commands": {
                    "createCustomer": {
                        "input": {
                            "data": {
                                "hasPropertiesOf": "#/domain/entities/customer",
                                "except": [
                                    "id",
                                    "userId",
                                    "addresses"
                                ],
                                "with": {
                                    "repeatPassword": {
                                        "type": "text"
                                    }
                                },
                                "ensure": [
                                    {
                                        "notEmpty": [
                                            "firstName",
                                            "lastName",
                                            "password",
                                            "repeatPassword"
                                        ]
                                    },
                                    {
                                        "matches": [
                                            "password",
                                            "repeatPassword"
                                        ]
                                    }
                                ]
                            }
                        },
                        "execute": [
                            {
                                "let": {
                                    "hashedPassword": {
                                        "hash": {
                                            "value": "@input.data.password",
                                            "salt": 10
                                        }
                                    }
                                }
                            },
                            {
                                "let": {
                                    "data": {
                                        "object": [
                                            {
                                                "merge": "@input.data"
                                            },
                                            {
                                                "omit": [
                                                    "password",
                                                    "repeatPassword"
                                                ]
                                            },
                                            {
                                                "merge": {
                                                    "password": "@let.hashedPassword",
                                                    "userId": "@identity.claims.sub"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "return": {
                                    "aggregate": {
                                        "type": "#/domain/entities/customer",
                                        "fromObject": "@let.data",
                                        "saveOptions": {
                                            "persistChanges": true,
                                            "auditTrail": {
                                                "userId": "@identity.claims.sub",
                                                "reason": "Register a customer"
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "updateCustomer": {
                        "input": {
                            "data": {
                                "hasPropertiesOf": "#/domain/entities/customer",
                                "except": [
                                    "id",
                                    "userId",
                                    "addresses",
                                    "password"
                                ],
                                "ensure": [
                                    {
                                        "notEmpty": [
                                            "firstName",
                                            "lastName",
                                            "email"
                                        ]
                                    },
                                    {
                                        "pattern": {
                                            "matches": [
                                                "email"
                                            ],
                                            "regex": "[a-zA-Z]+@[a-zA-Z]+\\.(com|in)"
                                        }
                                    }
                                ]
                            }
                        },
                        "execute": [
                            {
                                "aggregate": {
                                    "type": "#/domain/entities/customer",
                                    "findOne": {
                                        "userId": "@identity.claims.sub"
                                    },
                                    "actions": [
                                        {
                                            "name": "update",
                                            "parameters": {
                                                "data": "@input.data"
                                            }
                                        }
                                    ],
                                    "saveOptions": {
                                        "persistChanges": true,
                                        "auditTrail": {
                                            "userId": "@identity.claims.sub",
                                            "reason": "Update customer"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "addShippingAddress": {
                        "input": {
                            "data": {
                                "hasPropertiesOf": "#/domain/entities/address",
                                "ensure": [
                                    {
                                        "notEmpty": [
                                            "addressLine1",
                                            "addressLine2"
                                        ]
                                    }
                                ]
                            }
                        },
                        "execute": [
                            {
                                "let": {
                                    "customer": {
                                        "aggregate": {
                                            "type": "#/domain/entities/customer",
                                            "findOne": {
                                                "userId": "@identity.claims.sub"
                                            },
                                            "actions": [
                                                {
                                                    "name": "addAddress",
                                                    "parameters": {
                                                        "data": "@input.data"
                                                    }
                                                }
                                            ],
                                            "saveOptions": {
                                                "persistChanges": true,
                                                "auditTrail": {
                                                    "userId": "@identity.claims.sub",
                                                    "reason": "Update address"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "return": {
                                    "last": {
                                        "in": "@let.customer.addresses"
                                    }
                                }
                            }
                        ]
                    },
                    "updateShippingAddress": {
                        "input": {
                            "id": {
                                "type": "text"
                            },
                            "data": {
                                "hasPropertiesOf": "#/domain/entities/address",
                                "ensure": [
                                    {
                                        "notEmpty": [
                                            "addressLine1",
                                            "addressLine2"
                                        ]
                                    }
                                ]
                            }
                        },
                        "execute": [
                            {
                                "aggregate": {
                                    "type": "#/domain/entities/customer",
                                    "findOne": {
                                        "userId": "@identity.claims.sub"
                                    },
                                    "actions": [
                                        {
                                            "name": "updateAddress",
                                            "parameters": {
                                                "id": "@input.id",
                                                "data": "@input.data"
                                            }
                                        }
                                    ],
                                    "saveOptions": {
                                        "persistChanges": true,
                                        "auditTrail": {
                                            "userId": "@identity.claims.sub",
                                            "reason": "Update address"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "deleteAddress": {
                        "input": {
                            "id": {
                                "type": "text"
                            }
                        },
                        "execute": [
                            {
                                "aggregate": {
                                    "type": "#/domain/entities/customer",
                                    "deleteOne": {
                                        "userId": "@identity.claims.sub"
                                    },
                                    "saveOptions": {
                                        "persistChanges": true,
                                        "auditTrail": {
                                            "userId": "@identity.claims.sub",
                                            "reason": "Update address"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "queries": {
                    "getCustomer": {
                        "execute": [
                            {
                                "return": {
                                    "aggregate": {
                                        "type": "#/domain/entities/customer",
                                        "findOne": {
                                            "filter": {
                                                "id": "@identity.claims.sub"
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "eventHandlers": {
                    "customerManagement::application::features::commands::createCustomer": {
                        "description": "Triggered after a customer is created successfully.",
                        "execute": [
                            {
                                "sendMail": {
                                    "from": "@env.companyEmail",
                                    "to": [
                                        "@event.email"
                                    ],
                                    "subject": "Welcome to Our Service!",
                                    "template": {
                                        "templateId": "welcome-email-template",
                                        "fileStore": "s3",
                                        "data": "@event"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "interface": {
                "rest": {
                    "paths": {
                        "store/customers": {
                            "post": {
                                "request": {
                                    "body": "#/application/commands/createCustomer/input/data"
                                },
                                "response": {
                                    "success": {
                                        "201": {
                                            "body": "#/domain/entities/customer"
                                        }
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/commands/createCustomer",
                                    "input": {
                                        "data": "@request.body"
                                    }
                                },
                                "security": {
                                    "protect": true
                                }
                            }
                        },
                        "/store/customers/me": {
                            "put": {
                                "request": {
                                    "body": "#/application/commands/updateCustomer/input/data"
                                },
                                "response": {
                                    "success": {
                                        "204": ""
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/commands/updateCustomer",
                                    "input": {
                                        "data": "@request.body"
                                    }
                                },
                                "security": {
                                    "protect": true
                                }
                            },
                            "get": {
                                "response": {
                                    "success": {
                                        "200": {
                                            "body": "#/domain/entities/customer"
                                        }
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/queries/getCustomer"
                                },
                                "security": {
                                    "protect": true
                                }
                            }
                        },
                        "/store/customers/me/addresses": {
                            "post": {
                                "request": {
                                    "body": "#/application/commands/addShippingAddress/input/data"
                                },
                                "response": {
                                    "success": {
                                        "201": {
                                            "body": "#/domain/entities/address"
                                        }
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/commands/addShippingAddress",
                                    "input": {
                                        "data": "@request.body"
                                    }
                                },
                                "security": {
                                    "protect": true
                                }
                            }
                        },
                        "/store/customers/me/addresses/:id": {
                            "put": {
                                "request": {
                                    "params": {
                                        "id": {
                                            "type": "text"
                                        }
                                    },
                                    "body": "#/application/commands/updateShippingAddress/input/data"
                                },
                                "response": {
                                    "success": {
                                        "201": {
                                            "body": "#/domain/entities/address"
                                        }
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/commands/updateShippingAddress",
                                    "input": {
                                        "id": "@request.params.id",
                                        "data": "@request.body"
                                    }
                                },
                                "security": {
                                    "protect": true
                                }
                            },
                            "delete": {
                                "request": {
                                    "params": {
                                        "id": {
                                            "type": "text"
                                        }
                                    }
                                },
                                "response": {
                                    "success": {
                                        "204": ""
                                    }
                                },
                                "dispatch": {
                                    "request": "#/application/commands/deleteAddress",
                                    "input": {
                                        "id": "@request.params.id"
                                    }
                                },
                                "security": {
                                    "protect": true
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}